#!/bin/bash

##	Update: apt packages, git repositories, flatpak applications, npm packages, linux firmwares+kernel

RC='\e[0m'; GREEN='\e[32m'; RED='\e[31m'; ORANGE='\e[33m'; BLUE='\e[34m\e[1m';
OK="${GREEN} "; INFO="${ORANGE} "; WARN="${RED} "; FOLDER="${BLUE} "


updateApt(){

	UPDATER=$( command -v nala || command -v apt-get ) || { echo -e "${WARN}No updater found!${RC}"; exit 1; }

	if ! dpkg --audit; then

		echo -e "${WARN}There is problems with your packages manager, fix them and come back later!${RC}"
		exit 1

	fi

	dpkg --configure -a

	ACTIONS=( 'install' 'update' 'upgrade' 'dist-upgrade' 'full-upgrade' )

	for ACTION in "${ACTIONS[@]}"; do

		[[ ${ACTION} == 'update' ]] && ${UPDATER} ${ACTION} || ${UPDATER} ${ACTION} -y

	done

	ACTIONS=( 'clean' 'autoclean' 'autoremove' )

	for ACTION in "${ACTIONS[@]}"; do

		if [[ ${UPDATER} == 'nala' ]]; then

			${UPDATER} ${ACTION}

		elif [[ ${UPDATER} == 'apt-get' ]]; then

			for ACTION in "${ACTIONS[@]}"; do

				${UPDATER} ${ACTION} -y

			done

		fi

	done

}

updateNpm(){

	ACTIONS=( 'update' 'doctor' 'audit' 'audit fix' )

	for ACTION in "${ACTIONS[@]}"; do

		npm ${ACTION}


    done
}

updateFlatpak(){ flatpak repair -v && flatpak update -vy ;}

updateGit(){

	SECONDS='0'

	GIT_REPO_PATH=( '/opt' '/usr/share/themes' '/usr/share/icons' )
	GIT_REPO_DIR=( $(find "${GIT_REPO_PATH[@]}" -type d -name ".git" 2>/dev/null) )

	for GIT_PATH in "${GIT_REPO_DIR[@]}"; do

			cd "${GIT_PATH}" || return
			echo -e "\n${FOLDER}Updating ${GIT_PATH}\n${RC}"
			cd .. || return

			ACTIONS=( 'config pull.rebase true' 'stash' 'pull' )

			for ACTION in "${ACTIONS[@]}"; do

				git "${ACTION}"

			done

		done

}

updateKernel(){

	FIRMWARE_PKGS=( 'firmware-linux' 'firmware-linux-free' 'firmware-linux-nonfree' )

	for PKG in "${FIRMWARE_PKGS[@]}"; do

			${UPDATER} install ${PKG} -y

	done

#	FIRMWARE_PATH='/opt/FIRMWARE/'; mkdir -p ${FIRMWARE_PATH}; cd ${FIRMWARE_PATH} || return
#	echo -e "${INFO}Cloning the linux firmware git repository...\n${RC}"
#	git clone 'https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git' 2>/dev/null
#	cp -vur ${FIRMWARE_PATH}/linux-firmware/* /lib/firmware/
#
#	update-initramfs -uv

}

checkPriv(){

	if [[ ${EUID} -ne '0' ]]; then

			echo -e "${WARN}Run me as root!\n${RC}"
			exit 1

	fi

}

okMsg(){ echo -e "\n${OK}Done in ${SECONDS} seconds!\n${RC}"; }
failMsg(){ echo -e "${WARN}Ooops!\nSomething went wrong!\n${RC}"; exit 1; }

main(){

	clear

	CMDS=( 'apt' 'flatpak' 'npm' 'git' )

	for CMD in "${CMDS[@]}"; do

		if command -v ${CMD}>/dev/null; then

			SECONDS='0'
			CMD=${CMD^}

			echo -e "\n${INFO}Updating ${CMD}...\n${RC}"
			update${CMD} && okMsg || { failMsg; dpkg --audit; }

		fi

	done

	echo -e "\n${INFO}Updating the linux kernel...\n${RC}"
	updateKernel && okMsg || failMsg

}

checkPriv && main
