#!/bin/bash
## Update my git repository.

## TODO:
## - Check if git is installed.
## - Clean this mess.

## Set colors.
RC="\e[0m"
BOLD="\e[1m"
GREEN="\e[32m"
RED="\e[31m"
BLUE="\e[34m"


WARN="${RED}${BOLD} [-]${RC}"
INFO="${BLUE}${BOLD} [*]${RC}"
GOOD="${GREEN}${BOLD} [+]${RC}"

CWD=$(pwd)
USER_HOME="/home/lespink"
REPOS_LOCATION="/opt/My-Repo/"

UPDATE_GIT()
{
				## Search for GIT repos.
				for GIT_PATH in $(find ${REPOS_LOCATION} -type d -name ".git" 2>/dev/null)
					do
						cd ${GIT_PATH}
						echo -e "\n${INFO} ${GIT_PATH}${RC}"
						cd ..
						git config pull.rebase true
						## Pull change
						git pull
						## Add files to the repo
						git add -v .*
						git add -v *
						## Commit change
						git commit -a
						git push -v
						## Pull change
						git pull
						## Add files to the repo
						git add -v .*
						## Commit change
						git commit -a
						git push -v
						echo -e "\n${GOOD} ${GIT_PATH} Updated.${RC}"
						cd ${CWD}
						done
}

REQUIREMENTS="git"
if ! which ${REQUIREMENTS} > /dev/null
	then
 		echo -e "${WARN} To run this program, you need the following packages installed: ${REQUIREMENTS}\n${WARN} Exiting..."
		exit 1
	else
		if [[ "$EUID" -ne 0 ]]
			then
				echo -e "${WARN} This script must be run as root!\n${WARN} Exiting..."
				exit 1
			else
				if [[ -f ${USER_HOME}/.git-credentials ]]
					then
						cd ${REPOS_LOCATION}
						UPDATE_GIT 2>/dev/null
						## Dot-files.
						ln -svf /opt/My-Repo/Configs/dot-files/.* ${USER_HOME} 2>/dev/null
						ln -svf /opt/My-Repo/Configs/dot-files/.* ${HOME} 2>/dev/null

						## Rofi config
						ln -svf /opt/My-Repo/Configs/rofi/config.rasi ${USER_HOME}/.config/rofi/

                        ## Custom GTK CSS.
						ln -svf /opt/My-Repo/Configs/gtk.css ${USER_HOME}/.config/gtk-2.0/
						ln -svf /opt/My-Repo/Configs/gtk.css ${USER_HOME}/.config/gtk-2.0/
						ln -svf /opt/My-Repo/Configs/gtk.css ${USER_HOME}/.config/gtk-3.0/

						## Tilix themes.
						ln -svf /opt/My-Repo/Configs/Pure.json ${USER_HOME}/.config/tilix/schemes/Pure.json

						## Link scripts.
						ln -svf /opt/My-Repo/Updating/* /usr/local/bin
						ln -svf /opt/My-Repo/Passwords/* /usr/local/bin
						ln -svf /opt/My-Repo/Utilities/* /usr/local/bin
						ln -svf /opt/My-Repo/Telebash/* /usr/local/bin
						ln -svf /opt/My-Repo/Crypto/* /usr/local/bin
						echo -e "\n${GOOD} Symbolics links has been made.${RC}"

					else
						echo -e "${WARN} Git credentials not found!\n${WARN} Exiting..."
						exit 1
				fi
		fi
fi
