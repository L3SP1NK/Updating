#!/bin/bash
## Update my git repositories.

RC="\e[0m"
GREEN="\e[32m"
RED="\e[31m"
ORANGE="\e[33m"
BLUE="\e[34m\e[1m"

OK="${GREEN} "
INFO="${ORANGE} "
WARN="${RED} "
FOLDER="${BLUE} "


updateGit() {

	USER_HOME="/home/$( ls /home | head -n 1 )"
	REPO_PATH="/opt/mygit"
	REPO_FOUND=( $( find "${REPO_PATH}/" -type d -name ".git" 2>/dev/null ) )

	echo -e "\n${ORANGE}${INFO} Looking for git repositories...${RC}"

    for REPO in "${REPO_FOUND[@]}"; do

        CURRENT_REPO_NAME=$( echo "${REPO}" | cut -d '/' -f 4 )

        echo -e "\n${BLUE}${FOLDER} ${CURRENT_REPO_NAME} ${RC}"
        cd "${REPO}" && cd .. || return

        git config pull.rebase true
        git pull						## Will return error if changes have been made.
        git add -v .* * 2>/dev/null		## Dismiss error due to ".." being added.
        git commit -a && git push -v
        git pull && echo -e "\n${OK}${CURRENT_REPO_NAME} Updated. ${RC}\n"

    done

}


checkGitInstall() {

    if ! which git>/dev/null; then

        echo "\n${WARN}Git is not installed on this system! ${RC}"
        exit 1

    fi


    if [[ ! -f ${HOME}/.git-credentials ]]; then

        echo -e "\n${WARN}Git credentials not found! ${RC}"
        exit 1

    fi

}


main() {

    if [[ ${EUID} -ne "0" ]]; then

        echo -e "\n${WARN}Run me as root! ${RC}"
        exit 1

    fi

    checkGitInstall && updateGit
    makeLink 1>/dev/null

}


CWD="$(pwd)"

if main; then

	echo -e "\n${OK}Git Repositories have been updated successfully! ${RC}"
	cd ${CWD}
	exit

else

    echo -e "\n${WARN}Something went wrong! ${RC}"
    exit 1

fi
